const { exec } = require('child_process');
const path = require('path');

console.log('๐ ุชุดุบูู ุงูุชุทุจูู ุจุงุณุชุฎุฏุงู npx...');

// ุงุณุชุฎุฏุงู npx ูุถูุงู ุชููุฑ vite
const command = process.platform === 'win32' ? 'npx.cmd vite' : 'npx vite';

const viteProcess = exec(command, {
  cwd: process.cwd(),
  env: {
    ...process.env,
    NODE_ENV: 'development'
  }
});

viteProcess.stdout.on('data', (data) => {
  console.log(data.toString());
});

viteProcess.stderr.on('data', (data) => {
  console.error(data.toString());
});

viteProcess.on('close', (code) => {
  console.log(`โ vite ุงูุชูู ุจุงูููุฏ: ${code}`);
});

viteProcess.on('error', (error) => {
  console.error('โ ุฎุทุฃ ูู ุชุดุบูู vite:', error.message);
  console.log('๐ง ุฌุงุฑู ุชุซุจูุช ุงูููุชุจุงุช ุงููุทููุจุฉ...');
  
  exec('npm install', (installError, stdout, stderr) => {
    if (installError) {
      console.error('โ ูุดู ูู ุชุซุจูุช ุงูููุชุจุงุช:', installError.message);
      return;
    }
    
    console.log('โ ุชู ุชุซุจูุช ุงูููุชุจุงุชุ ุฌุงุฑู ุฅุนุงุฏุฉ ุงูุชุดุบูู...');
    exec(command, { cwd: process.cwd() }, (retryError, retryStdout, retryStderr) => {
      if (retryStdout) console.log(retryStdout);
      if (retryStderr) console.error(retryStderr);
    });
  });
});

// ุงูุชุนุงูู ูุน ุฅููุงู ุงูุนูููุฉ
process.on('SIGINT', () => {
  console.log('\n๐ ุฌุงุฑู ุฅููุงู ุงูุฎุงุฏู...');
  viteProcess.kill('SIGINT');
});